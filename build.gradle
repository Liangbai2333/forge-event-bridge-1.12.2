buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

plugins {
    id 'org.cadixdev.licenser' version '0.5.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.cadixdev.licenser'

group = 'site.liangbai'
version = '1.0'

repositories {
    jcenter()
    mavenCentral()
    maven { url = 'http://lss233.littleservice.cn/repositories/minecraft/' }
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20180814-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'
        }
    }
}

configurations {
    implementation.extendsFrom shaded
}

dependencies {
    minecraft group: 'net.minecraftforge', name:'forge', version: "${minecraft_version}-${forge_version}"

    shaded fileTree(dir: 'libs', includes: ['*.jar'])
    // https://mvnrepository.com/artifact/cglib/cglib
    shaded (group: 'cglib', name: 'cglib', version: '3.2.5') {
        exclude group: 'org.ow2.asm'
        exclude group: 'org.apache.ant'
    }

    implementation group: 'org.spigotmc', name: 'spigot', version: "${spigot_version}"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand(
                version: project.version,
                mcversion: "${minecraft_version}"
        )
    }
}

jar {
    manifest {
        attributes([
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    from {
        configurations.shaded.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

license {
    include '**/*.java'

    header = rootProject.file('HEADER.txt')

    ext {
        organization = 'Liangbai'
        year = 2021
    }
}

jar.finalizedBy('reobfJar')
